---
title: The first week
layout: default
hasSlides: true
---
<section>
    <h2 class="slide-only">Here's what we're going to do today:</h2>
    <div class="grid-x">
    	<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		    <ol class="toc">
		        <li><a href="#intro">Course Introduction</a></li>
		        <li><a href="#clientServer">Components of a client/server system</a></li>
		        <li><a href="#access">Process for accessing data</a></li>
		        <li><a href="#dev">How to install SQL Developer</a></li>
		        <li><a href="#terms">Terms</a></li>
		        <li><a href="#org">Organization of a (relational) database</a></li>
		        <li><a href="#relationships">(The three types of) Relationships between tables</a></li>
		        <li><a href="#def">How columns are defined</a></li>
		        <li><a href="#history">A little history</a></li>
		        <li><a href="#ddlDml"><abbr title="Data definition language">DDL</abbr> and <abbr title="Data manipulation language">DML</abbr> statements</a></li>
		        <li><a href="#lab">Lab time!</a></li>
		    </ol>
    	</div>
    </div>
</section>
<section id="intro">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1 post-section">
			<h2 class="h2">Welcome!</h2>
			<p>My name is Simon Borer. You can reach me at <a href="mailto:brrs0390@humbermail.ca">brrs0390@humbermail.ca</a>.</p>
			<p>In this course, we'll learn...</p>
			<ul>
				<li>what a database is,</li>
				<li>different tools for interacting with a database,</li>
				<li>different techniques for interacting with a database, and</li>
				<li>how to design and optimize a database.</li>
			</ul>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Anybody can do just fine in this course.</h2>
			<p>Come to class every week.</p>
			<p>Do your assignments on time.</p>
			<p>Ask questions.</p>
			<p>Don't cheat.</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Books</h2>
			<ul>
				<li>Murach’s Oracle SQL and PL/SQL, 2nd Edition
					<ul>
						<li>ISBN <code>978-1-890774-80-6</code></li>
					</ul>
				</li>
				<li>Murach’s MySQL, 2nd Edition
					<ul>
						<li>ISBN <code>978-1-890774-82-0</code></li>
					</ul>
				</li>
			</ul>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Assignments</h2>
			<p>Almost every week you'll have an assignment to complete.</p>
			<p>Assignments are due by 11:59pm the day <em>before</em> class.</p>
			<p>If they're late, you lose 5% per day for up to 5 days. After that, you get a zero.</p>
			<p>If there's a reason you can't complete an assignment on time, talk to me <em>before</em> it's due to see if we can work something out.</p>
			<p>These assignments are a big part of your final grade.</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		  <h2 class="h2">Rubric</h2>
		  <table>
		  	<thead><tr>
		  		<td>Evaluation</td>
		  		<td>Format</td>
		  		<td>Due</td>
		  		<td>Percentage</td>
		  	</tr></thead>
		  	<tbody>
		  		<tr>
		  			<td>Mid term</td>
		  			<td>Paper</td>
		  			<td>Week 7</td>
		  			<td>30</td>
		  		</tr>
		  		<tr>
		  			<td>Final exam</td>
		  			<td>Paper</td>
		  			<td>Week 15</td>
		  			<td>30</td>
		  		</tr>
		  		<tr>
		  			<td>Quizzes, Assignments, Labs</td>
		  			<td>Paper and digital</td>
		  			<td>Weekly</td>
		  			<td>40</td>
		  		</tr>
		  	</tbody>
		  	<tfoot>
		  		<tr>
		  			<td colspan="3" class="text-center">Total</td>
		  			<td>100</td>
		  		</tr>
		  	</tfoot>
		  </table>	
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		<h2 class="h2">Seriously, don't cheat.</h2>
		<p>Repercussions will be severe.</p>
		<p>Also, it will be really awkward for me.</p>
		<p>If you are feeling overwhelmed, talk to me. We can arrange peer tutoring, extensions, etc.</p>
		<p>If you are copying code from a resource (i.e. textbook, tutorial), write it out yourself and cite your source.</p>
		<p>If you are copying code from another student, you will <em>both</em> get in trouble.</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		<h2 class="h2">The Syllabus</h2>
		<p>
			<a class="button" target="_blank" href="<%= site.basePath %>/assets/documents/HTTP5105-syllabus.pdf">Download the syllabus<span class="show-for-sr">Opens in a new window.</span></a>		
		</p>
		</div>
	</div>
</section>
<section id="clientServer">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Components of a client-server system</h2>
			<a href="<%= site.basePath %>/assets/images/server-diagram.png" target='_blank'>
				<img class="diagram" src="<%= site.basePath %>/assets/images/diagram.png" alt="A diagram of a web client making a request from a web server, which in turn either returns static files, or a dynamic request populated by data from a database.">
				<span class="show-for-sr">Open image in a new window</span>
			</a>
		</div>
	</div>
</section>
<section id="access">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">How to access a database</h2>
			<p>Most databases are accessed using the Structured Query Language (SQL). SQL can either be written into server-side code (like <abbr title="The rare recursive acronym: 'PHP: Hypertext Preprocessor'">PHP</abbr> or <abbr title="Active Server Pages">ASP</abbr>) or run through a <abbr title="Graphical User Interface">GUI</abbr> like SQL Developer.</p>
			<a href="<%= site.basePath %>/assets/images/diagram-server_db.png" target='_blank'>
				<img class="diagram image-3q" src="<%= site.basePath %>/assets/images/diagram-server-db.png" alt="A diagram of a web client making a request from a web server, which in turn either returns static files, or a dynamic request populated by data from a database.">
				<span class="show-for-sr">Open image in a new window</span>
			</a>
		</div>
	</div>
</section>
<section id="dev">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Installing SQL Developer</h2>
			<ol>
				<li>Get a copy of SQL Developer from <a href="https://www.oracle.com/technetwork/developer-tools/sql-developer/downloads/index.html" target='_blank'>the Oracle website</a>.</li>
				<li>
					<ol>
						<li>Are you on Windows? You're done!</li>
						<li>Are you on a Mac? Unless you have <abbr title="Java Development Kit">JDK</abbr> 8 or 9 (not 10!) installed and set as your default already, you need to <a target="_blank" href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">download</a> and install JDK 8.</li>
						<li>If you install JDK 8, but you get an error telling you you <em>still</em> need JDK 8, then, using a <a href="https://www.sublimetext.com/" target='_blank'>text editor</a>, you need to open the file <code>$HOME/.sqldeveloper/18.2.0/product.conf</code> (note that <code>/.sqldeveloper/</code> is a hidden folder - if you don't know how to view hidden files and folders, see <a href="https://stackoverflow.com/questions/29135878/what-is-the-quickest-way-to-toggle-hide-show-hidden-files-on-a-mac-os-x-yosemite" target='_blank'>this StackOverflow answer</a>).</li>
						<li>Edit <code>product.conf</code>, changing <pre><code># SetJavaHome ../../jdk</code></pre> to <pre><code>SetJavaHome /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents</code></pre> (or wherever your JDK 8 is installed).</li>
					</ol>
				</li>
			</ol>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		<h2 class="h2">A little presentational tweak...</h2>
		<p>Just to make things a little more readable, go to <code>Oracle SQL Developer > Preferences</code> on Mac, or <code>Tools > Preferences</code> on PC.</p>
		<p>Under <code>Code Editor > Line Gutter</code>, check the box for <em>Show Line Numbers</em>.</p>
		<p>Under <code>Database > Worksheet</code>, check the box for <em>Grid in checker board or Zebra pattern</em>.</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Let's see if it works!</h2>
				<figure>
					<img src="<%= site.basePath %>/assets/images/new-connection.jpg" alt="Green plus symbol">
					<figcaption>To create a connection to a database, click on the green plus symbol in the top right of SQL Developer</figcaption>		
				</figure>
				<figure>
					<img src="<%= site.basePath %>/assets/images/new-connection--fields.jpg" alt="Fields to be filled out to create a new connection to the humber database.">
					<figcaption>Fill out the appropriate fields as indicated. <code>Connection name</code> is whatever you'll remember. <code>Username</code> is your student number. The rest of the values are required as indicated in the screenshot.</figcaption>
				</figure>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Populating your database</h2>
			<p>Download <a href="<%= site.basePath %>/assets/documents/create_ap_tables.sql">this .sql file</a>.</p>
			<p>Open this file with SQL Developer (<code>File > Open</code>) and then...</p>
				<figure>
					<img src="<%= site.basePath %>/assets/images/run-script.jpg" alt="Image indicating placement of 'run script' icon in SQL developer">
					<figcaption>...click the 'Run Script' icon (or press F5)</figcaption>
				</figure>
			<p>When prompted, choose to run this on the connection you've already created and opened.</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Your first query</h2>
			<figure>
				<img src="<%= site.basePath %>/assets/images/worksheet.jpg" alt="How to open a new worksheet">
				<figcaption>You should already have a worksheet open, but if you don't, click on the worksheet icon to open one up.</figcaption>
			</figure>
			<p>In the worksheet, type <pre><code>SELECT * FROM vendors</code></pre></p>
			<p>You should see all kinds of wonderful data!</p>
			<img src="<%= site.basePath %>/assets/images/output.jpg" alt="Database output">
		</div>
	</div>
</section>
<section id="terms">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Terminology</h2>
			<p>Let's start learning some words!</p>
			<figure>
				<img src="<%= site.basePath %>/assets/images/output--rows-columns.jpg" alt="Demonstration of rows and columns">
				<figcaption>These are easy - rows are horizontal sets of data, and columns are vertical categories of data.</figcaption>
			</figure>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Primary key</h2>
			<p>Another important element that every table should have is a <strong>primary key</strong>.</p>
			<figure>
				<img src="<%= site.basePath %>/assets/images/output--primary-key.jpg" alt="Demonstration of a primary key">
				<figcaption>Primary keys are something you define when you create a table. They <em>must</em> be unique for each row! No two rows can have the same primary key.</figcaption>
			</figure>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
		<h2 class="h2">What makes a database 'relational'?</h2>
		<p>This course will primarily deal with relational databases. There are other kinds, and we'll touch on them later in the course, but the relational database is one of the primary tools of the internet.</p>
		<p>Relational databases have multiple tables that are related to one another. In addition to a <strong>primary key</strong>, tables will often have a <strong>foreign key</strong>. This is to establish a relationship between the data sets, and take our data from two dimensions to 3D!</p>
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2"></h2>
			<figure>
				<img src="<%= site.basePath %>/assets/images/output--foreign-key.jpg" alt="Demonstration of a foreign key.">
				<figcaption>If we look at our <code>INVOICES</code> table, you'll see that if references <code>VENDOR_ID</code>, which is the primary key for the <code>VENDOR</code> table. This means we can easily reference the information about the vendor that this invoice belongs to from the <code>VENDOR</code> table.</figcaption>
			</figure>	
		</div>
	</div>
</section>
<section id="relationships">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Types of relationships</h2>
			<p>There are 3 types of relationship between tables, but only one of them is good!</p>
			<p>A <strong>one-to-many</strong> relationship means that the primary key of one table is referenced multiple times in another table. That's good! If we only had a single table, that information would have to be repeated many times. Instead, we put it in one table once and reference it externally over and over. That's efficient.</p>
			<p>A <strong>one-to-one</strong> relationship means that any row in your table is only referenced one time by another table. If that's the case, it's more efficient to store all the data in a single table.</p>
			<p>A <strong>many-to-many</strong> relationship is <em>real</em> messy. Think of students and classes. Students have many classes and classes have many students. There are two reasons this is messy: 1) because we only want one piece of information per cell in our table, and 2) because only want one column per category of data. We can solve this by creating a 'joining table' that sits between them - a table that creates a one-to-many relationship with both tables.</p>
			<p>Wow, that got a little complicated! Don't worry, we'll go back over all this. For today, just know that tables have relationships, and efficient relationships are best.</p>
		</div>
	</div>
</section>
<section id="def">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">Types of Data</h2>
			<p>There are certain ways that we keep our database organized and our data manageable. One is by defining a primary key. Oracle will throw an error if we try to add a row that has a primary key that's not unique. Another is by defining what kind of data can go in each column.</p>
			<figure>
				<img src="<%= site.basePath %>/assets/images/column-info.jpg" alt="Demonstration of clicking on a table to see information about it's columns.">
				<figcaption>In SQL Developer, if we click on a table in our table tree, it will show us information about the columns in that table, including what type of data is allowed.</figcaption>
			</figure>	
		</div>
	</div>
</section>
<section>
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2"></h2>
			<p>Some common data types:</p>
			<ul>
				<li>CHAR/VARCHAR2 - Strings of numbers, letters and symbols</li>
				<li>NUMBER - Integers and decimal numbers</li>
				<li>DATE - Dates and times</li>
				<li>BOOLEAN - A value of either true or false</li>
			</ul>
			<p>Columns can also specify whether or not they allow <em>null</em> (unknown) values. Columns can also have default values. These are all things you define when you set up your table (like we did at the beginning of class).</p>
		</div>
	</div>
</section>
<section id="history">
	<div class="grid-x">
		<div class="cell large-6 large-offset-3 medium-10 medium-offset-1">
			<h2 class="h2">History</h2>
			<p>Relational databases have been around since 1970, and Oracle has been around (in one form or another) for 40 years.</p>
			<p>IBM (DB2) and Microsoft (SQL Server) released their relational database systems in the mid-80s.</p>
			<p>Since the technology world was a bit slower then, they were able to agree on standards (a.k.a. the SQL language).</p>
			<p>In 1995, just as the world wide web was being born, along came the open-source MySQL, democratizing data for the whole world.</p>
			<p>In 2008, Sun Microsystems bought MySQL, and, two years late, Oracle bought Sun Microsystems, because that's just how the world is now, I guess.</p>
		</div>
	</div>
</section>
